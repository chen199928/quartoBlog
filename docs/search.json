[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/probability-theory/index.html",
    "href": "posts/probability-theory/index.html",
    "title": "Probability theory and random variables",
    "section": "",
    "text": "Email spam detection:\n\n1. Use Case:\nThe goal of this blog is to develop a detection system and data visualization for email spams.\n\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\n\n\n#import data\nspam_df = pd.read_csv(\"emails.csv\")\nspam_df['category'] = spam_df['spam'].replace({1: 'spam', 0: 'not spam'})\n\n\nspam_df\n\n\n\n\n\n\n\n\ntext\nspam\ncategory\n\n\n\n\n0\nSubject: naturally irresistible your corporate...\n1\nspam\n\n\n1\nSubject: the stock trading gunslinger fanny i...\n1\nspam\n\n\n2\nSubject: unbelievable new homes made easy im ...\n1\nspam\n\n\n3\nSubject: 4 color printing special request add...\n1\nspam\n\n\n4\nSubject: do not have money , get software cds ...\n1\nspam\n\n\n...\n...\n...\n...\n\n\n5723\nSubject: re : research and development charges...\n0\nnot spam\n\n\n5724\nSubject: re : receipts from visit jim , than...\n0\nnot spam\n\n\n5725\nSubject: re : enron case study update wow ! a...\n0\nnot spam\n\n\n5726\nSubject: re : interest david , please , call...\n0\nnot spam\n\n\n5727\nSubject: news : aurora 5 . 2 update aurora ve...\n0\nnot spam\n\n\n\n\n5728 rows × 3 columns\n\n\n\n\n# inspect data and group the columns based on spam\nspam_df.groupby('category').describe()\n\n\n\n\n\n\n\n\nspam\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\ncategory\n\n\n\n\n\n\n\n\n\n\n\n\nnot spam\n4360.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\nspam\n1368.0\n1.0\n0.0\n1.0\n1.0\n1.0\n1.0\n1.0\n\n\n\n\n\n\n\n\nx_train, x_test, y_train, y_test = train_test_split(spam_df.text, spam_df.spam, test_size=0.25)\n\n\nx_train.describe()\n\ncount                                                  4296\nunique                                                 4277\ntop       Subject: june 21 - 22 retail electricity confe...\nfreq                                                      2\nName: text, dtype: object\n\n\n\ncv = CountVectorizer()\nx_train_count = cv.fit_transform(x_train.values)\n\n\nx_train_count.toarray()\n\narray([[0, 0, 0, ..., 0, 0, 0],\n       [0, 1, 0, ..., 0, 0, 0],\n       [0, 0, 0, ..., 0, 0, 0],\n       ...,\n       [0, 0, 0, ..., 0, 0, 0],\n       [0, 0, 0, ..., 0, 0, 0],\n       [0, 1, 0, ..., 0, 0, 0]])\n\n\n\n#train model\nmodel = MultinomialNB()\nmodel.fit(x_train_count, y_train)\n\nMultinomialNB()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.MultinomialNBMultinomialNB()\n\n\n\nemail_ham = [\"hey, wanna meet up for the game?\"]\nemail_ham_count = cv.transform(email_ham)\nmodel.predict(email_ham_count)\n\narray([0])\n\n\n\n# pre-test spam\nemail_spam = [\"reward money click\"]\nemail_spam_count = cv.transform(email_spam)\nmodel.predict(email_spam_count)\n\narray([1])\n\n\n\nx_test_count = cv.transform(x_test)\nmodel.score(x_test_count, y_test)\n\n0.99231843575419"
  },
  {
    "objectID": "posts/anomaly-outlier-detection/index.html",
    "href": "posts/anomaly-outlier-detection/index.html",
    "title": "Anomaly/outlier detection",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/classification/index.html",
    "href": "posts/classification/index.html",
    "title": "Classification",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/clustering/index.html",
    "href": "posts/clustering/index.html",
    "title": "Clustering",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/regression/index.html",
    "href": "posts/regression/index.html",
    "title": "Linear and nonlinear regression",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quartoBlog",
    "section": "",
    "text": "Classification\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 20, 2023\n\n\nYouwei Chen\n\n\n\n\n\n\n  \n\n\n\n\nClustering\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 20, 2023\n\n\nYouwei Chen\n\n\n\n\n\n\n  \n\n\n\n\nLinear and nonlinear regression\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nNov 20, 2023\n\n\nYouwei Chen\n\n\n\n\n\n\n  \n\n\n\n\nProbability theory and random variables\n\n\n\n\n\n\n\nmachine learning\n\n\npython\n\n\ndata visualization\n\n\n\n\n\n\n\n\n\n\n\nNov 20, 2023\n\n\nYouwei Chen\n\n\n\n\n\n\n  \n\n\n\n\nAnomaly/outlier detection\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nSep 12, 2023\n\n\nYouwei Chen\n\n\n\n\n\n\nNo matching items"
  }
]